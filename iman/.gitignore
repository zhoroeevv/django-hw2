# Создано https://www.toptal.com/developers/gitignore/api/django
# Отредактируйте по адресу https://www.toptal.com/developers/gitignore?templates=django.

### Джанго ###
*.бревно
*.горшок
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-журнал
СМИ

# Если ваш процесс сборки включает в себя выполнение Collectstatic, то вам, вероятно, не нужно или вы не хотите включать staticfiles/
# в вашем репозитории Git. Обновите и раскомментируйте следующую строку соответствующим образом.
# <имя-проекта django>/staticfiles/

### Стек Django.Python ###
# Байт-компилированные/оптимизированные/DLL-файлы
*.py[код]
*$py.класс

# Расширения C
*.так

# Распространение/упаковка
.Питон
строить/
развивающие яйца/
расстояние/
загрузки/
яйца/
.яйца/
библиотека/
lib64/
части/
сдист/
вар/
колеса/
поделиться /python-wheels/
*.egg-info/
.installed.cfg
*.яйцо
МАНИФЕСТ

# PyInstaller
# Обычно эти файлы пишутся скриптом Python из шаблона
# перед тем, как PyInstaller соберет exe-файл, чтобы добавить в него дату/другую информацию.
*.манифест
*.spec

# Журналы установщика
пип-log.txt
pip-delete-this-directory.txt

# Отчеты о модульном тестировании/покрытии
htmlcov/
.tox/
.nox/
.покрытие
.покрытие.*
.cache
ностестс.xml
покрытие.xml
*.крышка
*.py,обложка
.гипотеза/
.pytest_cache/
крышка/

# Переводы
*.mo

# Материалы Джанго:

# Материал колбы:
пример/
.webassets-кэш

# Скромные вещи:
.скрапи

# Документация по Сфинксу
документы/_build/

# Пибилдер
.pybuilder/
цель/

# Блокнот Jupyter
.ipynb_checkpoints

# IPython
профиль_default/
ipython_config.py

# pyenv
# Для библиотеки или пакета вы можете игнорировать эти файлы, поскольку код
# предназначен для работы в нескольких средах; в противном случае проверьте их:
# .python-версия

# пипенв
# Согласно pypa/pipenv#598, рекомендуется включить Pipfile.lock в систему контроля версий.
# Однако в случае сотрудничества, если имеются зависимости или зависимости, специфичные для платформы
# не имея кросс-платформенной поддержки, Pipenv может устанавливать зависимости, которые не работают или не работают
# устанавливаем все необходимые зависимости.
#Pipfile.lock

# поэзия
# Как и в случае с Pipfile.lock, обычно рекомендуется включать поэтику.lock в систему контроля версий.
# Это особенно рекомендуется для двоичных пакетов, чтобы обеспечить воспроизводимость и более того.
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#поэзия.lock

# пдм
# Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
#pdm.lock
# pdm хранит конфигурации всего проекта в .pdm.toml, но его не рекомендуется включать
# в системе контроля версий.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

№ ПКП 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Сельдерей
сельдерейбит-расписание
сельдерейбит.pid

# файлы, обработанные SageMath
*.sage.py

# Среды
.env
.venv
окр./
венв/
ЕНВ/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта веревки
.ropeproject

# документация mkdocs
/сайт

# мойпи
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типа костра
.pyre/

# анализатор статических типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# Пичарм
# Специальный шаблон JetBrains хранится в отдельном файле JetBrains.gitignore, который может
# можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore.
# и может быть добавлен в глобальный gitignore или объединен с этим файлом. Для более ядерного
# вариант (не рекомендуется), вы можете раскомментировать следующее, чтобы игнорировать всю папку идей.
#.идея/

# Конец https://www.toptal.com/developers/gitignore/api/django